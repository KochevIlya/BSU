1. Паттерн Builder применяется для пошагового конструирования сложных объектов. Цель заключается в том, чтобы отделить процесс создания сложного объекта от его представления, чтобы один и тот же процесс конструирования мог создавать различные представления объекта.
Director (Директор): Отвечает за последовательность шагов конструирования. Взаимодействует с объектом Builder.

Builder (Строитель): Интерфейс, определяющий шаги построения объекта. Конкретные строители реализуют этот интерфейс для создания конкретных представлений объектов.

ConcreteBuilder (Конкретный строитель): Реализация интерфейса Builder. Отвечает за создание и сборку конкретных компонентов объекта.

Product (Продукт): Создаваемый сложный объект, который может иметь различные представления в зависимости от конкретного строителя.
Пример применения: Рассмотрим строительство дома. У вас есть директор, который задает последовательность этапов, строителя, который реализует каждый этап, и конечный продукт — дом. Директор указывает строителю, какие материалы использовать, в каком порядке строить, и строитель заботится о том, чтобы дом был построен по заданным параметрам. Вы можете использовать одного строителя для дома с бассейном, другого для дома с большим садом, но процесс конструирования остается инкапсулированным.
Раньше вы создавали дом напрямую, указывая все детали (фундамент, стены, крышу) в одном месте. Теперь вы создаете строителя, который знает, как пошагово строить дом. Директор, зная, какие шаги нужны, использует строителя для создания дома. Таким образом, клиентский код, заказывающий строительство, не обязан знать все детали построения.

2. Decorator Design Pattern применяется для добавления новой функциональности существующим объектам без изменения их структуры. Он инкапсулирует компоненты в декораторы, которые предоставляют дополнительное поведение. Таким образом, он обеспечивает гибкость в добавлении новых возможностей к объектам без модификации их кода.

Рассмотрим кофейный магазин. У вас есть базовый напиток - кофе. Декораторы представляют собой различные добавки, такие как молоко, сахар, ваниль. Вы можете заказать базовый кофе и добавить к нему различные декораторы в зависимости от ваших предпочтений. Декораторы обеспечивают гибкость в создании различных комбинаций напитков без изменения класса базового кофе. Так, вы можете создать кофе с молоком и сахаром, кофе с ванилью, или кофе сразу с несколькими добавками, сохраняя инкапсуляцию и упрощая управление заказами.
Раньше вы заказывали кофе и добавляли молоко или сахар непосредственно в самом напитке. Теперь вы создаете базовый кофе и используете декораторы для добавления молока, сахара и других ингредиентов. Декораторы оборачивают базовый кофе, расширяя его функциональность. Таким образом, клиентский код может динамически комбинировать различные декораторы, создавая разнообразные варианты напитков.